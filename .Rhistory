cat("Hola mundo")
mean(c(10, 20))
1 < 2
#| label: code-readcsv
#| collapse: true
# Lectura de archivo CSV ubicado en la Web
especies_mamiferos <-
read.csv(
"https://raw.githubusercontent.com/mesa-monitoreo-puntos/capacitacion/main/datos/especies-mamiferos-cr.csv"
)
#| label: code-readcsv
#| collapse: true
#| eval: false
# Lectura de archivo CSV ubicado en la Web
especies_mamiferos <-
read.csv(
"https://raw.githubusercontent.com/mesa-monitoreo-puntos/capacitacion/main/datos/especies-mamiferos-cr.csv"
)
# Desplegue de los datos
View(especies_mamiferos)
#| label: code-readcsv
#| collapse: true
#| eval: false
# Lectura de archivo CSV ubicado en la Web
especies_mamiferos_cr <-
read.csv(
"https://raw.githubusercontent.com/mesa-monitoreo-puntos/capacitacion/main/datos/especies-mamiferos-cr.csv"
)
# Desplegue de los datos
View(especies_mamiferos)
#| label: code-readcsv
#| collapse: true
#| eval: false
# Lectura de archivo CSV ubicado en la Web
especies_mamiferos_cr <-
read.csv(
"https://raw.githubusercontent.com/mesa-monitoreo-puntos/capacitacion/main/datos/especies-mamiferos-cr.csv"
)
# Desplegue de los datos
View(especies_mamiferos_cr)
#| label: cargar-palmerpenguins
#| warning: false
library(palmerpenguins)
View(penguins)
#| label: penguins-table
#| echo: false
penguins |>
select(species, sex, body_mass_g) |>
arrange(species, sex, body_mass_g) |>
datatable(
colnames = c("Especie", "Sexo", "Peso"),
options = list(
pageLength = 5,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
),
rownames= FALSE
)
#| label: carga-dt
#| message: false
# Carga de DT
library(DT)
#| label: penguins-table
#| echo: false
penguins |>
select(species, sex, body_mass_g) |>
arrange(species, sex, body_mass_g) |>
datatable(
colnames = c("Especie", "Sexo", "Peso"),
options = list(
pageLength = 5,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
),
rownames= FALSE
)
#| label: cargar-paquetes
#| message: false
# Carga de dplyr
library(dplyr)
#| label: penguins-table
#| echo: false
penguins |>
select(species, sex, body_mass_g) |>
arrange(species, sex, body_mass_g) |>
datatable(
colnames = c("Especie", "Sexo", "Peso"),
options = list(
pageLength = 5,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
),
rownames= FALSE
)
#| label: cargar-palmerpenguins
#| warning: false
# Carga de palmerpenguins
library(palmerpenguins)
#| label: ejemplo-palmerpenguins-01
#| warning: false
# Gráfico de dispersión de longitud del pico vs masa (peso)
penguins |>
ggplot(aes(x = bill_length_mm, y = body_mass_g)) +
geom_point(size = 2) +
geom_smooth(method = "lm", se = FALSE) +
ggtitle("Longitud del pico vs. masa") +
xlab("Longitud del pico (mm)") +
ylab("Masa (g)") +
labs(color = "Especie", shape = "Especie")
#| label: cargar-paquetes
#| message: false
# Carga de dplyr
library(dplyr)
# Carga de palmerpenguins
library(palmerpenguins)
View(penguins)
#| label: carga-sf-leaflet
#| message: false
# Carga de sf
library(sf)
# Carga de leaflet
library(leaflet)
#| label: st_read-texto
# Lectura de un archivo CSV con registros de presencia de felinos en Costa Rica
registros <-
st_read(
"https://raw.githubusercontent.com/mesa-monitoreo-puntos/capacitacion/main/datos/especies-mamiferos-cr.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude", # columna de longitud decimal
"Y_POSSIBLE_NAMES=decimalLatitude"   # columna de latitud decimal
),
quiet = TRUE
)
#| label: st_read-texto
# Lectura de un archivo CSV con registros de presencia
registros <-
st_read(
"https://raw.githubusercontent.com/mesa-monitoreo-puntos/capacitacion/main/datos/especies-mamiferos-cr.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude", # columna de longitud decimal
"Y_POSSIBLE_NAMES=decimalLatitude"   # columna de latitud decimal
),
quiet = TRUE
)
registros <-
registros |>
filter(species = "Puma concolor")
View(registros)
#| label: st_read-texto
# Lectura de un archivo CSV con registros de presencia
registros <-
st_read(
"https://raw.githubusercontent.com/mesa-monitoreo-puntos/capacitacion/main/datos/registros-mamiferos-cr.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude", # columna de longitud decimal
"Y_POSSIBLE_NAMES=decimalLatitude"   # columna de latitud decimal
),
quiet = TRUE
)
registros <-
registros |>
filter(species == "Puma concolor")
#| label: st_read-texto
# Lectura de un archivo CSV con registros de presencia
registros <-
st_read(
"https://raw.githubusercontent.com/mesa-monitoreo-puntos/capacitacion/main/datos/registros-mamiferos-cr.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude", # columna de longitud decimal
"Y_POSSIBLE_NAMES=decimalLatitude"   # columna de latitud decimal
),
quiet = TRUE
)
# Filtro por especie
registros <-
registros |>
filter(species == "Puma concolor")
# Mapa
leaflet() |>
setView(# centro y nivel inicial de acercamiento
lng = -84.19452,
lat = 9.572735,
zoom = 7) |>
addTiles(group = "OpenStreetMap") |> # capa base de OSM |>
addPolygons(
# capa de provincias (polígonos)
data = provincias,
color = "black",
fillColor = "transparent",
stroke = TRUE,
weight = 1.0
) |>
addCircleMarkers(
# capa de registros de presencia (puntos)
data = registros,
stroke = F,
radius = 4,
fillColor = 'blue',
fillOpacity = 1,
group = "Puma concolor",
popup = paste(
paste0("<strong>Especie: </strong>", registros$species),
paste0("<strong>Localidad: </strong>", registros$locality),
paste0("<strong>Fuente: </strong>", registros$institutionCode),
sep = '<br/>'
)
) |>
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Felinos")) |> # control de capas
addScaleBar(position = "bottomleft", options = scaleBarOptions(imperial = FALSE)) |> # barra de escala
addMiniMap(position = "bottomleft") # mapa de ubicación
#| label: st_read-texto
# Lectura de un archivo CSV con registros de presencia
registros <-
st_read(
"https://raw.githubusercontent.com/mesa-monitoreo-puntos/capacitacion/main/datos/registros-mamiferos-cr.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude", # columna de longitud decimal
"Y_POSSIBLE_NAMES=decimalLatitude"   # columna de latitud decimal
),
quiet = TRUE
)
# Filtro por especie
registros <-
registros |>
filter(species == "Puma concolor")
# Mapa
leaflet() |>
setView(# centro y nivel inicial de acercamiento
lng = -84.19452,
lat = 9.572735,
zoom = 7) |>
addTiles(group = "OpenStreetMap") |> # capa base de OSM |>
addCircleMarkers(
# capa de registros de presencia (puntos)
data = registros,
stroke = F,
radius = 4,
fillColor = 'blue',
fillOpacity = 1,
group = "Puma concolor",
popup = paste(
paste0("<strong>Especie: </strong>", registros$species),
paste0("<strong>Localidad: </strong>", registros$locality),
paste0("<strong>Fuente: </strong>", registros$institutionCode),
sep = '<br/>'
)
) |>
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Felinos")) |> # control de capas
addScaleBar(position = "bottomleft", options = scaleBarOptions(imperial = FALSE)) |> # barra de escala
addMiniMap(position = "bottomleft") # mapa de ubicación
